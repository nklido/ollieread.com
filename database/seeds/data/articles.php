<?php

return [

    /*[
        'name'            => '',
        'title'           => null,
        'heading'         => null,
        'seo_description' => null,
        'slug'            => '',
        'excerpt'         => "",
        'active'          => true,
        'status'          => Ollieread\Core\Support\Status::PUBLIC,
        'post_at'         => Carbon\Carbon::createFromDate(2019, 7, 10),
        'category'        => '',
        'topics'          => [

        ],
        'versions'        => [

        ],
        'tags'            => [

        ],
    ],*/

    [
        'id'              => 1,
        'parent_id'       => null,
        'name'            => 'A streamlined approach to Laravel validation',
        'title'           => null,
        'heading'         => null,
        'seo_description' => null,
        'slug'            => 'a-streamlined-approach-to-laravel-validation',
        'excerpt'         => "It has been while (almost two years) since I wrote an article here and I've decided to make my triumphant return with an article I never managed to get around to writing.\n\nAs the title may suggest, this article is about streamlining validation with Laravel. While the final aim is to explain and present you with a quick and simple abstracted validator that requires minimal code in the actual implementation stage, before we get there I will need to cover the usual methods of validation which are default validation, form request validation and model validation. So let's start.",
        'image'           => null,
        'active'          => true,
        'status'          => Ollieread\Core\Support\Status::PUBLIC,
        'post_at'         => Carbon\Carbon::createFromFormat('Y-m-d H:i:s', '2016-03-26 15:33:48'),
        'deleted_at'      => null,
        'created_at'      => Carbon\Carbon::createFromFormat('Y-m-d H:i:s', '2016-03-26 15:33:48'),
        'updated_at'      => Carbon\Carbon::createFromFormat('Y-m-d H:i:s', '2018-03-31 06:48:53'),
        'category'        => 'guides',
        'topics'          => [
            'laravel',
            'validation',
        ],
        'versions'        => [
            'laravel-5.3',
            'php-7.1',
        ],
        'tags'            => [
            'Laravel',
            'Validation',
            'Laravel Validation',
        ],
    ],
    [
        'id'              => 3,
        'parent_id'       => null,
        'name'            => 'Freelance PHP developer, the return!!',
        'title'           => null,
        'heading'         => null,
        'seo_description' => null,
        'slug'            => 'freelance-php-developer-return',
        'excerpt'         => "It has only been a year, but I'm making a return to the world of freelancing.\n\nFor those of you that don't know, I've been working for CleverCherry for the last year (well, a year as of yesterday). It has been a wonderful year and a wonderful experience. I've made some friends along the way and I've thoroughly enjoyed being a part of their team. I handed my notice in some two months ago and my final day of employment will be the 3rd November, followed by a week of me relaxing, and then it's back into it again.",
        'image'           => null,
        'active'          => true,
        'status'          => Ollieread\Core\Support\Status::PUBLIC,
        'post_at'         => Carbon\Carbon::createFromFormat('Y-m-d H:i:s', '2017-10-11 00:00:57'),
        'deleted_at'      => null,
        'created_at'      => Carbon\Carbon::createFromFormat('Y-m-d H:i:s', '2018-03-25 18:45:57'),
        'updated_at'      => Carbon\Carbon::createFromFormat('Y-m-d H:i:s', '2018-03-31 07:51:37'),
        'category'        => 'personal',
        'topics'          => [
            'freelance',
        ],
        'versions'        => [
        ],
        'tags'            => [
            'Freelance',
            'Freelancing',
            'Self-Employed',
        ],
    ],
    [
        'id'              => 4,
        'parent_id'       => null,
        'name'            => 'An alternative to Eloquent, Articulate',
        'title'           => null,
        'heading'         => null,
        'seo_description' => null,
        'slug'            => 'an-alternative-to-eloquent-articulate',
        'excerpt'         => "Lately I've found myself getting frustrated with Eloquent, needing more than Laravels default ORM offers. I'm a big fan of the DataMapper pattern, but I become disheartened with the overhead and complexity of Doctrine. My time spent with Java has brought out a love for objects, and absolutely everything being objects. With this in mind, I created myself a super basic lightweight ORM named Articulate.",
        'image'           => null,
        'active'          => true,
        'status'          => Ollieread\Core\Support\Status::PUBLIC,
        'post_at'         => Carbon\Carbon::createFromFormat('Y-m-d H:i:s', '2018-04-17 00:00:50'),
        'deleted_at'      => null,
        'created_at'      => Carbon\Carbon::createFromFormat('Y-m-d H:i:s', '2018-04-06 17:08:50'),
        'updated_at'      => Carbon\Carbon::createFromFormat('Y-m-d H:i:s', '2018-08-07 17:59:13'),
        'category'        => 'updates',
        'topics'          => [
            'laravel',
            'database',
            'eloquent',
            'orm',
            'design-pattern',
        ],
        'versions'        => [
            'laravel-5.6',
            'laravel-5.7',
            'php-7.1',
            'php-7.2',
        ],
        'tags'            => [
            'Articulate',
            'ORM',
            'Laravel',
            'Eloquent',
            'Eloquent Alternative',
        ],
    ],
    [
        'id'              => 5,
        'parent_id'       => null,
        'name'            => 'Using Repositories with Laravel',
        'title'           => null,
        'heading'         => null,
        'seo_description' => null,
        'slug'            => 'using-repositories-with-laravel',
        'excerpt'         => "The repository pattern is one that appears to polarize developers, with half swearing by and half swearing against. It's also something that seems to have been spoken about a lot, though I feel that more often than not, it's an over complicated over engineered approach.",
        'image'           => null,
        'active'          => true,
        'status'          => Ollieread\Core\Support\Status::PUBLIC,
        'post_at'         => Carbon\Carbon::createFromFormat('Y-m-d H:i:s', '2018-04-06 20:34:49'),
        'deleted_at'      => null,
        'created_at'      => Carbon\Carbon::createFromFormat('Y-m-d H:i:s', '2018-04-06 20:34:49'),
        'updated_at'      => Carbon\Carbon::createFromFormat('Y-m-d H:i:s', '2018-04-06 21:15:46'),
        'category'        => 'tutorials',
        'topics'          => [
            'laravel',
            'database',
            'eloquent',
            'orm',
            'design-pattern',
            'repository-pattern',
        ],
        'versions'        => [
            'laravel-5.6',
            'laravel-5.7',
            'php-7.1',
            'php-7.2',
        ],
        'tags'            => [
            'ORM',
            'Laravel',
            'Eloquent',
            'Eloquent Alternative',
            'Design Patterns',
            'Repositories',
            'Repository Design Pattern',
        ],
    ],
    [
        'id'              => 6,
        'parent_id'       => null,
        'name'            => 'Treating APIs like any other data source',
        'title'           => null,
        'heading'         => null,
        'seo_description' => null,
        'slug'            => 'treating-apis-like-any-other-data-source',
        'excerpt'         => "APIs are, after all, another data source, so why not treat them like one?",
        'image'           => null,
        'active'          => true,
        'status'          => Ollieread\Core\Support\Status::PUBLIC,
        'post_at'         => Carbon\Carbon::createFromFormat('Y-m-d H:i:s', '2018-07-19 23:38:28'),
        'deleted_at'      => null,
        'created_at'      => Carbon\Carbon::createFromFormat('Y-m-d H:i:s', '2018-07-19 22:40:37'),
        'updated_at'      => Carbon\Carbon::createFromFormat('Y-m-d H:i:s', '2018-07-20 00:11:45'),
        'category'        => 'updates',
        'topics'          => [
            'database',
            'api',
        ],
        'versions'        => [
            'php-7.2',
        ],
        'tags'            => [
            'APIs',
            'Databases',
        ],
    ],
    [
        'id'              => 7,
        'parent_id'       => null,
        'name'            => 'Laravel multi-tenancy, avoiding over engineering',
        'title'           => null,
        'heading'         => null,
        'seo_description' => null,
        'slug'            => 'laravel-multi-tenancy-avoiding-over-engineering',
        'excerpt'         => "Multi-tenancy seems to be a hot topic at the moment, with many hoping that Laravel Nova was going to solve all of their issues. There are a lot of packages out there that aid you with your multi-tenanted endeavour, but it doesn't have to be that complicated. Honestly.",
        'image'           => null,
        'active'          => true,
        'status'          => Ollieread\Core\Support\Status::PUBLIC,
        'post_at'         => Carbon\Carbon::createFromFormat('Y-m-d H:i:s', '2018-08-06 16:30:00'),
        'deleted_at'      => null,
        'created_at'      => Carbon\Carbon::createFromFormat('Y-m-d H:i:s', '2018-08-06 10:42:23'),
        'updated_at'      => Carbon\Carbon::createFromFormat('Y-m-d H:i:s', '2018-10-23 16:23:18'),
        'category'        => 'tutorials',
        'topics'          => [
            'laravel',
            'multitenancy',
            'software-architecture',
        ],
        'versions'        => [
            'laravel-5.7',
            'php-7.1',
            'php-7.2',
        ],
        'tags'            => [
            'Laravel',
            'Laravel Multitenancy',
            'Multitenancy',
            'Laravel',
            'Multi-tenancy',
            'Laravel Multi-tenancy',
        ],
    ],
    [
        'id'              => 8,
        'parent_id'       => null,
        'name'            => 'How I accidentally created an ORM to avoid using Eloquent',
        'title'           => null,
        'heading'         => null,
        'seo_description' => null,
        'slug'            => 'how-i-accidentally-created-an-orm-to-avoid-using-eloquent',
        'excerpt'         => "In this article, I'm going to go through some of the reasons I stopped using Eloquent, as well as covering the reason for Articulates creation, and the different iterations that I took to make it what it is today.",
        'image'           => null,
        'active'          => true,
        'status'          => Ollieread\Core\Support\Status::PUBLIC,
        'post_at'         => Carbon\Carbon::createFromFormat('Y-m-d H:i:s', '2018-08-07 17:35:25'),
        'deleted_at'      => null,
        'created_at'      => Carbon\Carbon::createFromFormat('Y-m-d H:i:s', '2018-08-07 17:35:25'),
        'updated_at'      => Carbon\Carbon::createFromFormat('Y-m-d H:i:s', '2018-08-07 17:47:41'),
        'category'        => 'updates',
        'topics'          => [
            'laravel',
            'database',
            'eloquent',
            'orm',
            'design-pattern',
        ],
        'versions'        => [
            'laravel-5.6',
            'laravel-5.7',
            'php-7.1',
            'php-7.2',
        ],
        'tags'            => [
            'Articulate',
            'ORM',
            'Laravel',
            'Eloquent',
            'Eloquent Alternative',
        ],
    ],
    [
        'id'              => 11,
        'parent_id'       => null,
        'name'            => 'Laravel RBAC (role based access control), without over-engineering',
        'title'           => null,
        'heading'         => null,
        'seo_description' => null,
        'slug'            => 'laravel-rbac-role-based-access-control-without-over-engineering',
        'excerpt'         => "My one-man quest to stop people over-engineering their code continues, but this time I'll be approaching roles & permissions, commonly referred to as an RBAC.",
        'image'           => null,
        'active'          => true,
        'status'          => Ollieread\Core\Support\Status::PUBLIC,
        'post_at'         => Carbon\Carbon::createFromFormat('Y-m-d H:i:s', '2018-08-16 00:00:00'),
        'deleted_at'      => null,
        'created_at'      => Carbon\Carbon::createFromFormat('Y-m-d H:i:s', '2018-08-16 23:27:39'),
        'updated_at'      => Carbon\Carbon::createFromFormat('Y-m-d H:i:s', '2018-08-18 19:36:53'),
        'category'        => 'tutorials',
        'topics'          => [
            'laravel',
            'database',
            'eloquent',
            'authentication',
            'authorisation',
        ],
        'versions'        => [
            'laravel-5.6',
            'laravel-5.7',
        ],
        'tags'            => [
            'Laravel',
            'Laravel Gates',
            'Laravel Authentication',
            'Laravel Authorisation',
            'Roles and Permissions',
            'RBAC',
            'Role Based Access Control',
        ],
    ],
    [
        'id'              => 13,
        'parent_id'       => null,
        'name'            => 'Creating a modern day PHP framework',
        'title'           => null,
        'heading'         => null,
        'seo_description' => null,
        'slug'            => 'creating-a-modern-day-php-framework',
        'excerpt'         => "PHP has come a long way since I started development some 15 years ago, and its frameworks are far from the small MVC framework I created back in 2008 to get my head fully around the concept. A lot of frameworks have fallen behind, unable to keep up with the rapidly changing climate, and those that have kept up with it polarise developers. It's easy to bash a framework, but what does it actually take to build a framework? I'm going to give it ago. ",
        'image'           => null,
        'active'          => true,
        'status'          => Ollieread\Core\Support\Status::PUBLIC,
        'post_at'         => Carbon\Carbon::createFromFormat('Y-m-d H:i:s', '2018-09-09 00:00:00'),
        'deleted_at'      => null,
        'created_at'      => Carbon\Carbon::createFromFormat('Y-m-d H:i:s', '2018-09-09 15:49:49'),
        'updated_at'      => Carbon\Carbon::createFromFormat('Y-m-d H:i:s', '2018-09-09 16:09:48'),
        'category'        => 'personal',
        'topics'          => [
            'framework',
        ],
        'versions'        => [
            'php-7.2',
        ],
        'tags'            => [
            'MVC',
            'MVC Framework',
            'Framework',
        ],
    ],

];